
// Very simple test case.
(1 + 2 + 3);

// Let-expressions:
( let x = 1+0;
  let y = 2+0;
  x*y
);

// If-expressions:
( let x = 1+0;
  let y = 2+0;
  if (1 == 2) then x*x else y*y
);

// Check for correct continuation of nested if.
( let a = 1+0;
  let b = a + (1 + (if (a==2) then 3 else 4));
  if (b == a) then a+5 else b+5
);

// Ensure that the Lets don't introduce empty blocks.
( let x = 1+0;
  let y = (let z = (let a = x; a+a); z*z);
  y/y
);

// Continuation passing between if and let
// Make the z branches continue directly to x/x, without empty blocks.
( let a = 1+0;
  let b = 2+0;
  if (a == b) then (let y = a+3; y*y)
              else (let z = b+3;
                    if (z < 4) then z+z else z*z)
);

// First version of locally defined functions.
( let a = 1+0;
  let b = 2+0;
  let f(y: Int): Int -> y+1;
  let g(z: Int): Int -> f(z*2);
  g(a*b)
);

// Locally defined functions with multiple arguments.
( let a = 1+0;
  let b = 2+0;
  let f(y: Int, z: Int): Int -> y*z+1;
  let g(c: Int, d: Int): Int -> f(c*2, d*2);
  g(a,b)
);

// The first real code, with a loop!.
(let n = 100 + 0;
 letrec loop(i: Int, total: Int): Int -> (
   if (i == n) then total else loop(i-1, total+i)
 );
 loop(0,0)
);

